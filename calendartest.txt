{{-- Il me faut d'abord générer le calendrier --}}

<style>

html, body {
  height:100%;
}
body {
  font-size:100%;
  line-height:1.5;
  font-family: "Roboto Condensed", sans-serif;
  background:#EFEFEF;
  color:#202020;
}

*, *:before, *:after {
  box-sizing:border-box;
}

.group::after {
    content: "";
    display: table;
    clear: both;
  }

img {
  max-width:100%;
  height:auto;
  vertical-align:baseline;
}

a {
  text-decoration:none;
}


.calendar-wrapper {
  width:360px;
  margin:3em auto;
  padding:2em;
  border-radius:5px;
  background:#424B6D;
  
}
table {
  clear:both;
  width:100%;
  border-radius:3px;
  border-collapse:collapse;
  color:#E15C36;
}
td {
  height:48px;
  text-align:center;
  vertical-align:middle;
  width:calc(100% / 7);
}
td:hover {
    cursor: pointer;
}
td.normal:hover {
    color:#E15C36;
}
td.not-current {
  color:#808080;
}
td.normal {
    font-weight: normal;
    font-size: 1.2rem;
    color: #AAAAAA;
}
td.today {
  font-weight:700;
  color: #E15C36;
  font-size:1.7em;
  border-bottom: 1px solid #E15C36;
}
td.event {
    border: 1px solid white;
}
thead td {
  border:none;
  color:#E15C36;
  text-transform:uppercase;
  font-size:1.5em;
}
#btnPrev {
  margin-bottom:20px;
}

#btnNext {
  /* float:right; */
  margin-bottom:20px;
}


#btnPrev, #btnNext {
  background:transparent;
  border:none;
  outline:none;
  font-size:1em;
  color:#AAAAAA;
  cursor:pointer;
  font-family:"Roboto Condensed", sans-serif;
  text-transform:uppercase;
  transition:all 0.3s ease;
}
#btnNext, #btnPrev:hover {
    color:@calendar-standout;
    font-weight:bold;
}
#divEvent {
    display: none;
}
#btnBack {
    margin: 0;
    padding: 0;
    margin-bottom:20px;
    cursor: pointer;
}
.headCal {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
</style>

<div class="calendar-wrapper">
    <div class="headCal">
        <button id="btnPrev" type="button">Pré.</button>
        <h3 id="btnBack">RETOUR</h3>
        <button id="btnNext" type="button">Sui.</button>
    </div>
    <div id="divCal"></div>
    <div id="divEvent"></div>
</div>

<h1>

</h1>
  
<script src="/js/jquery.js"></script>
<script>
var Cal = function(divId) {

//Store div id
this.divId = divId;

// Days of week, starting on Sunday
this.DaysOfWeek = [
  'Dim',
  'Lun',
  'Mar',
  'Mer',
  'Jeu',
  'Ven',
  'Sam'
];

// Months, stating on January
this.Months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre' ];

// Set the current month, year
var d = new Date();

this.currMonth = d.getMonth();
this.currYear = d.getFullYear();
this.currDay = d.getDate();

};

// Goes to next month
Cal.prototype.nextMonth = function() {
if ( this.currMonth == 11 ) {
  this.currMonth = 0;
  this.currYear = this.currYear + 1;
}
else {
  this.currMonth = this.currMonth + 1;
}
this.showcurr();
};

// Goes to previous month
Cal.prototype.previousMonth = function() {
if ( this.currMonth == 0 ) {
  this.currMonth = 11;
  this.currYear = this.currYear - 1;
}
else {
  this.currMonth = this.currMonth - 1;
}
this.showcurr();
};

// Show current month
Cal.prototype.showcurr = function() {
$('#divCal').show();
$('#divEvent').hide();
this.showMonth(this.currYear, this.currMonth);
};

// Show month (year, month)
Cal.prototype.showMonth = function(y, m) {

var d = new Date()
// First day of the week in the selected month
, firstDayOfMonth = new Date(y, m, 1).getDay()
// Last day of the selected month
, lastDateOfMonth =  new Date(y, m+1, 0).getDate()
// Last day of the previous month
, lastDayOfLastMonth = m == 0 ? new Date(y-1, 11, 0).getDate() : new Date(y, m, 0).getDate();


var html = '<table>';

// Write selected month and year
html += '<thead><tr>';
html += '<td colspan="7">' + this.Months[m] + ' ' + y + '</td>';
html += '</tr></thead>';


// Write the header of the days of the week
html += '<tr class="days">';
for(var i=0; i < this.DaysOfWeek.length;i++) {
  html += '<td>' + this.DaysOfWeek[i] + '</td>';
}
html += '</tr>';

// Write the days
var i=1;

let evts = {
    0 : {
        day : 7,
        month : 7,
        year : 2019,
        title: "Carrefour Numérique",
        description: "Lorem ipsum blabla description random...",
        structure: "Structure",
        heureDebut: "10:00",
        heureFin: "18:00"
    },
    1 : {
        day : 20,
        month : 7,
        year : 2019,
        title: "Evenement Random",
        description: "Lorem ipsum blabla description random...",
        structure: "Structure",
        heureDebut: "10:00",
        heureFin: "18:00"
    },
    2 : {
        day: 20,
        month: 10,
        year: 2020,
        title: "Lorem numérique",
        description: "Lorem ipsum blabla description random...",
        structure: "Structure",
        heureDebut: "10:00",
        heureFin: "18:00"
    }
}

Cal.prototype.showEvent = function(evt) {

    let currentDay = evts[evt].day
    let currentMonth = this.Months[evts[evt].month - 1]
    let currentYear = evts[evt].year
    let currentTitle = evts[evt].title
    let currentDesc = evts[evt].description
    let currentStructure = evts[evt].structure
    let currentDebut = evts[evt].heureDebut
    let currentFin = evts[evt].heureFin


    $('#divCal').hide();
    var html = '<table>';

    html += '<thead><tr>';
    html += '<td colspan="7">'+ currentDay + ' ' + currentMonth + ' ' + currentYear + '</td>';
    html += '</tr></thead></table>';
    html += '<h3>' + currentTitle + '</h3>'
    html += '<p>' + currentDesc + '</p>'
    html += '<p>' + currentStructure + '</p>'
    html += '<p><span>' + currentDebut + ' </span><span>' + currentFin + '</span></p>'
    $('#divEvent').html(html);
    $('#divEvent').show();

}

function checkEvent(day, month, year) {
    

    for(let z = 0; z < Object.keys(evts).length; z++) {
        
        if(evts[z].day == day && evts[z].month == month + 1 && evts[z].year == year) {
            return z;
        }
    }
    

}


do {

  var dow = new Date(y, m, i).getDay();

  // If Sunday, start new row
  if ( dow == 0 ) {
    html += '<tr>';
  }
  // If not Sunday but first day of the month
  // it will write the last days from the previous month
  else if ( i == 1 ) {
    html += '<tr>';
    var k = lastDayOfLastMonth - firstDayOfMonth+1;
    for(var j=0; j < firstDayOfMonth; j++) {
      html += '<td class="not-current">' + k + '</td>';
      k++;
    }
  }

  // Write the current day in the loop
  var chk = new Date();
  var chkY = chk.getFullYear();
  var chkM = chk.getMonth();



    if (chkY == this.currYear && chkM == this.currMonth && i == this.currDay) {
        html += '<td class="today">' + i + '</td>';
    } else if (checkEvent(i, this.currMonth, this.currYear) >= 0){
        html += '<td data-event=' + checkEvent(i, this.currMonth, this.currYear) + ' class="event">' + i + '</td>';
    } else {
        html += '<td class="normal">' + i + '</td>';
    }


    
  
  

  // If Saturday, closes the row
  if ( dow == 6 ) {
    html += '</tr>';
  }
  // If not Saturday, but last day of the selected month
  // it will write the next few days from the next month
  else if ( i == lastDateOfMonth ) {
    var k=1;
    for(dow; dow < 6; dow++) {
      html += '<td class="not-current">' + k + '</td>';
      k++;
    }
  }

  i++;
}while(i <= lastDateOfMonth);

// Closes table
html += '</table>';

// Write HTML to the div
document.getElementById(this.divId).innerHTML = html;
};


// On Load of the window
window.onload = function() {

// Start calendar
    var c = new Cal("divCal");			
    c.showcurr();

    // Bind next and previous button clicks
    getId('btnNext').onclick = function() {
    c.nextMonth();
    };
    getId('btnPrev').onclick = function() {
    c.previousMonth();
    };

    $(document).on('click', '.event', function(){
        let attr = $(this).attr('data-event');
        c.showEvent(attr)
    })
    $(document).on('click', '#btnBack', function(){
        c.showcurr();
    })
}

// Get element by id
function getId(id) {
return document.getElementById(id);
}

</script>